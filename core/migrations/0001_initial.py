# Generated by Django 3.0.14 on 2023-07-24 14:59

import colorfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom de l'expérience", max_length=200)),
                ('description', models.TextField(help_text="Description de l'expérience")),
                ('duration', models.CharField(help_text="Durée de l'expérience", max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Texte de présentation')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(help_text='Prénom', max_length=50)),
                ('lastname', models.CharField(help_text='Nom', max_length=50)),
                ('companyname', models.CharField(blank=True, help_text="Nom de l'entreprise", max_length=100)),
                ('mail', models.CharField(blank=True, help_text='Email', max_length=100)),
                ('message', models.TextField(help_text='Message de recommandation')),
                ('date', models.DateField(help_text='Date du message')),
                ('verified', models.BooleanField(help_text='Non affichée / Affichée')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom de la compétence', max_length=50)),
                ('advancement', models.IntegerField(help_text='Progression de la compétence')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', help_text='Couleur associée à la compétence', image_field=None, max_length=18, samples=None)),
                ('category', models.CharField(choices=[('WEB', 'web'), ('DEVOPS', 'devops'), ('AI', 'ai'), ('PROJECT', 'project')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom de la formation', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description de la formation', null=True)),
                ('duration', models.CharField(blank=True, help_text='Durée de la formation', max_length=30, null=True)),
                ('inline', models.BooleanField(default=False, help_text='Afficher en ligne / Non affichée')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom du projet', max_length=150)),
                ('description', models.TextField(help_text='Description du projet')),
                ('url', models.URLField(blank=True, help_text='URL vers le projet', max_length=300)),
                ('image', models.ImageField(upload_to='images/')),
                ('status', models.BooleanField(help_text='Hors ligne / En ligne')),
                ('skill_1', models.ManyToManyField(blank=True, related_name='skill_1', to='core.Skill')),
                ('skill_2', models.ManyToManyField(blank=True, related_name='skill_2', to='core.Skill')),
                ('skill_3', models.ManyToManyField(blank=True, related_name='skill_3', to='core.Skill')),
            ],
        ),
    ]
